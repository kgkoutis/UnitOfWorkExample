// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UnitOfWorkExample.Infrastructure.EfCore;

namespace UnitOfWorkExample.Migrator.EfCore.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20211123204001_RichDomainModel")]
    partial class RichDomainModel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.12");

            modelBuilder.Entity("UnitOfWorkExample.Domain.Entities.WeatherForecast", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("TemperatureC")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("WeatherForecasts");
                });

            modelBuilder.Entity("UnitOfWorkExample.Domain.Entities.WeatherForecast", b =>
                {
                    b.OwnsOne("UnitOfWorkExample.Domain.ValueObjects.WeatherForecastSummary", "Summary", b1 =>
                        {
                            b1.Property<int>("WeatherForecastId")
                                .HasColumnType("int");

                            b1.Property<string>("Text")
                                .IsRequired()
                                .HasColumnType("longtext")
                                .HasColumnName("Summary");

                            b1.HasKey("WeatherForecastId");

                            b1.ToTable("WeatherForecasts");

                            b1.WithOwner()
                                .HasForeignKey("WeatherForecastId");
                        });

                    b.Navigation("Summary");
                });
#pragma warning restore 612, 618
        }
    }
}
